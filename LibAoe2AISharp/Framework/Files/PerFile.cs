using System;
using System.Diagnostics;
using System.Globalization;
using LibAoe2AISharp.Specifications;

namespace LibAoe2AISharp.Framework
{
    /// <summary>
    /// standard .per file.
    /// </summary>
    public abstract class PerFile : PerFileGenerator
    {
        /// <summary>
        /// Separator of comment.
        /// </summary>
        public static readonly string SeparatorLine =
            ";" + new string('=', 79) + Environment.NewLine;

        /// <summary>
        /// parent file of this instance.
        /// </summary>
        private PerFile parentFile;

        /// <summary>
        /// Gets or sets author of AI script.
        /// </summary>
        public string Author { get; set; }

        /// <summary>
        /// Gets file create date.
        /// </summary>
        public string CreateDate { get; } = DateTime.Now.ToString(CultureInfo.CurrentCulture);

        /// <summary>
        /// Gets file name without extention.
        /// </summary>
        public override string FileName => ParentFile?.FileName + GetType().Name;

        /// <summary>
        /// Gets or Sets path name of AI script file.
        /// </summary>
        public override string PathName { get; set; }

        /// <summary>
        /// Gets or Sets parent file that load this file using load command.
        /// </summary>
        public PerFile ParentFile
        {
            get => parentFile;
            set {
                if (value == this) {
                    throw new InvalidOperationException();
                } else {
                    parentFile = value;
                }
            }
        }

        /// <summary>
        /// Gets script.
        /// </summary>
        public override string OutputScript
        {
            get {
                var outputScript = string.Empty;

                outputScript += HeaderComment;

                foreach (var item in GetCommandGroups()) {
                    outputScript += item.ToScript();
                }

                outputScript += FooterComment;

                Debug.Print(outputScript);

                return outputScript;
            }
        }

        /// <summary>
        /// Gets footer comment.
        /// </summary>
        protected static string FooterComment => SeparatorLine
                                                + ";EndOfScript" + Environment.NewLine
                                                + SeparatorLine;

        /// <summary>
        /// Gets header comment.
        /// </summary>
        protected string HeaderComment => ";Age of Empires II Computer Player Strategy" + Environment.NewLine
                                        + ";Generated by Aoe2AI#: " + DllFileInfo.ProductName
                                        + ":Ver." + DllFileInfo.FileVersion + Environment.NewLine
                                        + ";File: " + FileName + Environment.NewLine
                                        + ";Author: " + Author + Environment.NewLine
                                        + ";Date: " + CreateDate + Environment.NewLine;

        /// <summary>
        /// Gets or sets DLL file infomation of LibAoe2AIScript.
        /// </summary>
        private FileVersionInfo DllFileInfo { get; set; } = FileVersionInfo.GetVersionInfo("LibAoe2AISharp.dll");

        /// <summary>
        /// Gets command group.
        /// <para>
        /// Define commands as return value of the function of the inheritance class.
        /// </para>
        /// </summary>
        /// <returns>command group.</returns>
        protected abstract CommandGroupCollection GetCommandGroups();
    }
}
